buildscript {
    repositories {
        maven {
            url "http://dl.bintray.com/jmoore/java-lib"
        }
    }
    dependencies {
        classpath 'com.mooregreatsoftware:gradle-defaults:1.0.3'
    }
}

plugins {
    id 'com.jfrog.bintray' version '1.4'
}

plugins {
    id 'com.gradle.build-receipt' version '1.0'
}
buildReceiptLicense {
    agreementUrl = 'https://gradle.com/terms-of-service'
    agree = 'yes'
}

group = 'com.twcable.gradle'
description = 'Gradle plugins for working with OSGi bundles in Adobe CQ/AEM'

apply plugin: 'groovy'

apply plugin: 'java-gradle-plugin'

def httpcomponents_version = '4.1.2'

dependencies {
    // @Nonnull @Nullable etc annotations
    compile "com.google.code.findbugs:jsr305:2.0.0"

    compile "org.apache.httpcomponents:httpclient:${httpcomponents_version}"
    compile "org.apache.httpcomponents:httpmime:${httpcomponents_version}"

    testCompile "cglib:cglib-nodep:2.2"

    testCompile "org.spockframework:spock-core:1.0-groovy-2.4", {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }

    testCompile "org.eclipse.jetty:jetty-server:9.3.6.v20151106"

    testCompile 'com.netflix.nebula:nebula-test:3.1.0'
    testCompile "org.gradle:gradle-tooling-api:${gradle.gradleVersion}" // hack to get the source
}

bintray {
    pkg {
        licenses = ['Apache-2.0']
        attributes = ['plat': ['gradle', 'aem', 'osgi', 'sling', 'cq']]

        //noinspection GroovyAssignabilityCheck
        version {
            attributes = ['gradle-plugin': ["com.twcable.gradle-plugin:${project.group}:${project.name}"]]
        }
    }
}

apply plugin: 'com.mooregreatsoftware.defaults'

defaults {
    compatibilityVersion = '1.7'

    id = 'twcable'

    orgName = 'Time Warner Cable'
    orgUrl = 'http://www.timewarnercable.com'

    bintrayRepo = 'aem'
    bintrayLabels = ['gradle', 'groovy', 'osgi']

    developers = [
        [id: 'jmoore', name: 'Jim Moore', email: 'moore.jim@gmail.com'],
    ]

    copyrightYears = '2014-2015'
}

wrapper {
    gradleVersion = 2.9
}

javadoc {
    options.showFromPackage()
}

// Hack around Oracle's breaking changes to JDK 1.8 Javadoc tool
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

groovydoc {
    link("https://jsr-305.googlecode.com/svn/trunk/javadoc/", "javax.annotation")
    link("http://docs.oracle.com/javase/8/docs/api/", 'java.')
    link("http://docs.groovy-lang.org/latest/html/api/", 'groovy.')
}

jar {
    from sourceSets.main.output

    // hack: including test output in main JAR since Gradle's dependency mechanism doesn't take classifier
    // into account so it gets resolved to the same artifact as the main
    from sourceSets.test.output
}

//task testJar(type: Jar) {
//    appendix "tests"
//    from sourceSets.test.output
//}
//
//project.artifacts {
//    archives testJar
//}
//
//publishing {
//    publications {
//        test(MavenPublication) {
//            from components.java
//            artifact testJar {
////                artifactId "${project.name}-tests"
////                classifier 'tests'
//            }
//        }
//    }
//}
